package saman.online.shop;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.appcompat.app.AppCompatActivity;import androidx.drawerlayout.widget.DrawerLayout;import androidx.fragment.app.FragmentTransaction;import android.os.Bundle;import android.os.Handler;import android.view.Gravity;import android.view.View;import android.widget.FrameLayout;import android.widget.TextView;import com.google.android.material.appbar.MaterialToolbar;import com.google.android.material.badge.BadgeDrawable;import com.google.android.material.bottomnavigation.BottomNavigationView;import com.google.android.material.navigation.NavigationView;import com.google.android.material.snackbar.Snackbar;import saman.online.shop.fragments.AboutFragment;import saman.online.shop.fragments.BasketFragment;import saman.online.shop.fragments.BlogFragment;import saman.online.shop.fragments.HomeFragment;import saman.online.shop.fragments.InvoicesFragment;import saman.online.shop.fragments.LoginFragment;import saman.online.shop.fragments.ProductFragment;import saman.online.shop.fragments.ProfileFragment;import saman.online.shop.handlers.CardDBHandler;import saman.online.shop.handlers.CurrentUserHandler;import saman.online.shop.handlers.UserDBHandler;public class MainActivity extends AppCompatActivity {    private DrawerLayout mainDrawer;    private MaterialToolbar topAppBar;    private BottomNavigationView bottomNav;    private FrameLayout mainFrame;    private NavigationView navigation;    private boolean doubleBackToExitPressedOnce = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        init();    }    private void init() {        bindViews();        syncMenu();        ActionBarDrawerToggle actionBarDrawerToggle = new ActionBarDrawerToggle(                this,                mainDrawer,                topAppBar,                R.string.open,                R.string.close        );        mainDrawer.addDrawerListener(actionBarDrawerToggle);        actionBarDrawerToggle.syncState();        bottomNav.setOnItemSelectedListener(item -> {            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();            switch (item.getItemId()) {                case R.id.home:                    transaction.replace(R.id.main_frame, new HomeFragment(MainActivity.this));                    break;                case R.id.products:                    transaction.replace(R.id.main_frame, new ProductFragment(MainActivity.this));                    break;                case R.id.blog:                    transaction.replace(R.id.main_frame, new BlogFragment(MainActivity.this));                    break;                case R.id.basket:                    transaction.replace(R.id.main_frame, new BasketFragment(MainActivity.this));                    break;            }            transaction.commit();            return true;        });        bottomNav.setSelectedItemId(R.id.home);        navigation.setNavigationItemSelectedListener(item -> {            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();            switch (item.getItemId()) {                case R.id.login:                    transaction.replace(R.id.main_frame, new LoginFragment(MainActivity.this));                    break;                case R.id.profile:                    transaction.replace(R.id.main_frame, new ProfileFragment(MainActivity.this));                    break;                case R.id.invoices:                    transaction.replace(R.id.main_frame, new InvoicesFragment(MainActivity.this));                    break;                case R.id.logout:                    CurrentUserHandler currentUserHandler = new CurrentUserHandler();                    currentUserHandler.setCurrentUser(null);                    UserDBHandler userDBHandler = new UserDBHandler(MainActivity.this);                    userDBHandler.deleteAllUsers();                    CardDBHandler cardDBHandler = new CardDBHandler(MainActivity.this);                    cardDBHandler.deleteAllBasket();                    syncMenu();                    transaction.replace(R.id.main_frame, new HomeFragment(MainActivity.this));                    break;                case R.id.about:                    transaction.replace(R.id.main_frame, new AboutFragment(MainActivity.this));                    break;            }            transaction.commit();            mainDrawer.closeDrawer(Gravity.LEFT);            return true;        });    }    private void bindViews() {        mainDrawer = findViewById(R.id.main_drawer);        topAppBar = findViewById(R.id.top_app_bar);        bottomNav = findViewById(R.id.bottom_nav);        mainFrame = findViewById(R.id.main_frame);        navigation = findViewById(R.id.navigation);    }    @Override    public void onBackPressed() {        if (doubleBackToExitPressedOnce) {            super.onBackPressed();            return;        }        this.doubleBackToExitPressedOnce = true;        Snackbar snackbar = Snackbar.make(mainFrame, R.string.twice_back, Snackbar.LENGTH_LONG);        snackbar.getView().setTranslationY(-130);        snackbar.show();        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                doubleBackToExitPressedOnce = false;            }        }, 2000);    }    public void syncMenu() {        View header = navigation.getHeaderView(0);        TextView fullName = header.findViewById(R.id.full_name);        TextView username = header.findViewById(R.id.username);        if (CurrentUserHandler.IsLoggedIn()) {            navigation.getMenu().clear();            navigation.inflateMenu(R.menu.drawer_login_menu);            fullName.setText(CurrentUserHandler.getCurrentUser().getFullName());            username.setText("(" + CurrentUserHandler.getCurrentUser().getUsername() + ")");        } else {            navigation.getMenu().clear();            navigation.inflateMenu(R.menu.drawer_menu);            fullName.setText("Full Name");            username.setText("(username)");        }    }    public void syncBadges() {        CardDBHandler cardDBHandler = new CardDBHandler(this);        int basketCount = cardDBHandler.getAllBasketDataCount();        BadgeDrawable badge = bottomNav.getOrCreateBadge(R.id.basket);        if (basketCount > 0) {            badge.setVisible(true);            badge.setNumber(basketCount);        } else {            badge.setVisible(false);            badge.setNumber(0);        }    }    @Override    protected void onResume() {        super.onResume();        syncBadges();    }}